name: Deploy release
on: 
    release:
      types: 
        - published


jobs:
    build_bins:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, macOS-latest, windows-latest]
                arch: [x86_64]
        name: Build binaries for ${{ matrix.os }} - ${{ matrix.arch }}
        steps:
            - name: Get tag
              id: tag
              uses: olegtarasov/get-tag@v2.1
            - name: Get release
              uses: bruceadams/get-release@v1.2.2
              id: get_release
              env:
                  GITHUB_TOKEN: ${{ github.token }}

            
            - uses: actions/checkout@v2

            - name: Setup Haskell
              uses: haskell/actions/setup@v1
              with:
                  enable-stack: true
            - if: matrix.os == 'windows-latest'
              name: Set extension to .exe on Windows
              run: echo "EXT=.exe" >> $GITHUB_ENV

            - name: Set stack bin dir
              run: echo "STACK_BINDIR=$(stack path --local-bin)" >> $GITHUB_ENV

            - name: Set binary path name
              run: echo "BINARY_PATH=${{ env.STACK_BINDIR }}/ltxa${{ env.EXT }}" >> $GITHUB_ENV
            
            - name: Build binaries
              run: stack build  --arch=${{ matrix.arch }}

            - name: Install binaries
              run: stack install

            - name: Upload binaries
              id: upload_release
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ github.token }}
              with:
                  upload_url: ${{ steps.get_release.outputs.upload_url }}
                  asset_path: ${{ env.BINARY_PATH }}
                  asset_name: ltxa-${{ steps.tag.outputs.tag }}-${{ runner.os }}-${{ matrix.arch }}
                  asset_content_type: application/octet-stream

            




